#!/usr/bin/python

import subprocess as sp
import sys
import urllib
import time

def get_instance_metadata():
  lines = sp.check_output("ec2metadata").split("\n")
  pairs = [[x.strip() for x in line.split(":")] for line in lines]
  pairs = [x for x in pairs if len(x)==2]
  return dict(pairs)

def get_hostname():
  metadata = get_instance_metadata()
  return metadata['public-hostname']

def register_self(master_hostname, hostname):
  url = "http://%s/addworker/?path=MySystem@%s:2553/user/manager"%(master_hostname, hostname)

  print "registering worker using: %s"%url
  fp = urllib.urlopen( url )
  print fp.read()

if __name__=='__main__':
  if len(sys.argv)<2:
    exit("usage: %s master_hostname"%sys.argv[0] )

  master_hostname = sys.argv[1]
  hostname = get_hostname()

  # start up cluster worker
  wrk = sp.Popen(["java","-jar", "-Dconfig.resource=worker.conf", "./build/libs/otpa-cluster-all.jar", hostname],stdout=sp.PIPE)
  while True:
    line = wrk.stdout.readline()
    print line,
    if line.split()[:2]==["starting","manager"]:
      break

  # register cluster worker with master
  try:	
    register_self(master_hostname, hostname)
  except Exception, ex:
    wrk.terminate()
    raise ex

  # let the worker run
  while True:
    line = wrk.stdout.readline()
    if len(line)==0:
      time.sleep(0.1)
    else:
      print line,
